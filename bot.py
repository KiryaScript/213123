import discord
from discord.ext import commands, tasks
import os
import random
import asyncio
import validators
import requests
from pydub import AudioSegment
import ffmpeg
import wave
import time
from pathlib import Path
import subprocess
from discord import app_commands
import nacl
import json
from mutagen.mp3 import MP3
from mutagen.wave import WAVE
from mutagen.oggvorbis import OggVorbis
import psutil
import platform
import GPUtil
import sqlite3
import datetime
import random
import logging
import re

STEAM_API_KEY = "1A4AEF96185A69B0831979EB9C6A9452"
STATUS_MAP = {0: "üü• –û—Ñ–ª–∞–π–Ω", 1: "üü© –û–Ω–ª–∞–π–Ω", 2: "üü® –û—Ç–æ—à–µ–ª"}

intents = discord.Intents.all()
bot = commands.Bot(command_prefix='!', intents=intents)

@bot.event
async def on_ready():
    print(f'–ë–æ—Ç {bot.user} –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!')

@bot.command(name='leave', help='–ü–æ–∫–∏–Ω—É—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª')
async def leave(ctx):
    if ctx.voice_client:
        await ctx.voice_client.disconnect()
        await ctx.send("–ü–æ–∫–∏–Ω—É–ª –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª")
    else:
        await ctx.send("–ë–æ—Ç –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!")

UPLOAD_DIRECTORY = "user_audio"

if not os.path.exists(UPLOAD_DIRECTORY):
    os.makedirs(UPLOAD_DIRECTORY)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ Steam API
def get_steam_profile(steam_id):
    url = f"http://api.steampowered.com/ISteamUser/GetPlayerSummaries/v2/?key={STEAM_API_KEY}&steamids={steam_id}"
    try:
        response = requests.get(url)
        response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä–∏–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞ (200)
        data = response.json()
        if 'response' in data and 'players' in data['response'] and len(data['response']['players']) > 0:
            return data['response']['players'][0]
        else:
            return None
    except requests.exceptions.RequestException as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return None
    except ValueError as e:
        print(f"–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {e}")
        return None

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –∏–≥—Ä –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –Ω–∏–º
def get_steam_games(steam_id):
    url = f"http://api.steampowered.com/IPlayerService/GetOwnedGames/v1/?key={STEAM_API_KEY}&steamid={steam_id}&format=json&include_appinfo=1&include_played_free_games=1"
    try:
        response = requests.get(url)
        response.raise_for_status()
        data = response.json()
        if 'response' in data:
            return data['response'].get('games', [])
        return []
    except requests.exceptions.RequestException as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return []
    except ValueError as e:
        print(f"–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {e}")
        return []

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
def get_steam_achievements(steam_id, app_id):
    url = f"http://api.steampowered.com/ISteamUserStats/GetPlayerAchievements/v1/?key={STEAM_API_KEY}&steamid={steam_id}&appid={app_id}"
    try:
        response = requests.get(url)
        response.raise_for_status()
        data = response.json()
        if 'playerstats' in data and 'achievements' in data['playerstats']:
            return data['playerstats']['achievements']
        return []
    except requests.exceptions.RequestException as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π: {e}")
        return []
    except ValueError as e:
        print(f"–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π: {e}")
        return []

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
def get_steam_inventory(steam_id, app_id=730):  # –î–ª—è CS:GO (app_id=730)
    url = f"https://steamcommunity.com/profiles/{steam_id}/inventory/json/{app_id}/2"
    try:
        response = requests.get(url)
        response.raise_for_status()
        data = response.json()
        if 'rgInventory' in data:
            return data['rgInventory']
        return []
    except requests.exceptions.RequestException as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è: {e}")
        return []
    except ValueError as e:
        print(f"–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è: {e}")
        return []

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –±–∞–Ω–∞—Ö
def get_steam_bans(steam_id):
    url = f"http://api.steampowered.com/ISteamUser/GetPlayerBans/v1/?key={STEAM_API_KEY}&steamids={steam_id}"
    try:
        response = requests.get(url)
        response.raise_for_status()
        data = response.json()
        if 'response' in data and len(data['response']['players']) > 0:
            return data['response']['players'][0]
        return None
    except requests.exceptions.RequestException as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –±–∞–Ω–æ–≤: {e}")
        return None
    except ValueError as e:
        print(f"–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –±–∞–Ω–æ–≤: {e}")
        return None

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ—Ñ–∏–ª–µ
@bot.command(name='steam', help='–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ñ–∏–ª–µ Steam –ø–æ Steam ID')
async def fetch_steam_profile(ctx, steam_id: str):
    profile_data = get_steam_profile(steam_id)
    if not profile_data:
        await ctx.send("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å Steam API.")
        return

    # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    username = profile_data.get('personaname', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
    profile_url = profile_data.get('profileurl', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
    avatar = profile_data.get('avatarfull', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
    level = profile_data.get('communityvisibilitystate', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
    created = profile_data.get('timecreated', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
    friends_count = profile_data.get('friend_count', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')

    # –ò–≥—Ä—ã
    games = get_steam_games(steam_id)
    popular_games = sorted(games, key=lambda x: x.get('playtime_forever', 0), reverse=True)[:3]
    total_games = len(games)
    last_played_game = games[0]['name'] if games else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"

    # –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å
    inventory = get_steam_inventory(steam_id)
    inventory_count = len(inventory)
    inventory_items = "\n".join([f"{item.get('market_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')} - {item.get('value', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}" for item in inventory[:3]])

    # –ë–∞–Ω –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
    bans_data = get_steam_bans(steam_id)
    bans = bans_data.get('VACBanned', False) if bans_data else False
    community_ban = bans_data.get('CommunityBanned', False) if bans_data else False
    trade_ban = bans_data.get('TradeBan', False) if bans_data else False

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    embed = discord.Embed(title=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ñ–∏–ª–µ {username}", description=f"**–£—Ä–æ–≤–µ–Ω—å:** {level}", color=0x00FF00)
    embed.add_field(name="–ò–º—è –ø—Ä–æ—Ñ–∏–ª—è", value=username, inline=True)
    embed.add_field(name="URL –ø—Ä–æ—Ñ–∏–ª—è", value=profile_url, inline=True)
    embed.add_field(name="–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞", value=created, inline=True)
    embed.add_field(name="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥—Ä—É–∑–µ–π", value=friends_count, inline=True)
    embed.set_thumbnail(url=avatar)

    embed.add_field(name="–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∏–≥—Ä—ã (–ø–æ —á–∞—Å–∞–º)", value="\n".join([f"{game['name']} - {game['playtime_forever']} –º–∏–Ω—É—Ç" for game in popular_games]), inline=False)
    embed.add_field(name="–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä", value=total_games, inline=True)
    embed.add_field(name="–ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–ø—É—â–µ–Ω–Ω–∞—è –∏–≥—Ä–∞", value=last_played_game, inline=True)

    embed.add_field(name="–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å", value=f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤: {inventory_count}\n–ü—Ä–µ–¥–º–µ—Ç—ã: \n{inventory_items}", inline=False)

    embed.add_field(name="–ë–∞–Ω—ã –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è", value=f"VAC-–±–∞–Ω: {'–î–∞' if bans else '–ù–µ—Ç'}\nCommunity Ban: {'–î–∞' if community_ban else '–ù–µ—Ç'}\nTrade Ban: {'–î–∞' if trade_ban else '–ù–µ—Ç'}", inline=False)

    await ctx.send(embed=embed)

@bot.command(name='up', help='–ó–∞–≥—Ä—É–∑–∏—Ç—å –∞—É–¥–∏–æ—Ñ–∞–π–ª')
async def upload(ctx):
    if len(ctx.message.attachments) == 0:
        embed = discord.Embed(title="–û—à–∏–±–∫–∞", description="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª –∫ —Å–æ–æ–±—â–µ–Ω–∏—é.", color=discord.Color.red())
        await ctx.send(embed=embed)
        return
    
    attachment = ctx.message.attachments[0]
    if not attachment.filename.lower().endswith(('.mp3', '.wav', '.ogg')):
        embed = discord.Embed(title="–û—à–∏–±–∫–∞", description="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ MP3, WAV –∏–ª–∏ OGG.", color=discord.Color.red())
        await ctx.send(embed=embed)
        return

    file_path = os.path.join(UPLOAD_DIRECTORY, attachment.filename)
    await attachment.save(file_path)
    embed = discord.Embed(title="–£—Å–ø–µ—Ö", description=f"–§–∞–π–ª {attachment.filename} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!", color=discord.Color.green())
    await ctx.send(embed=embed)

@bot.command(name='stop')
async def stop(ctx):
    if ctx.voice_client:
        ctx.voice_client.stop()
        await ctx.send("–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")

@bot.command(name='kick', help='–í—ã–≥–Ω–∞—Ç—å –ø–æ–ª—å–∑–≤–∞—Ç–µ–ª—è —Å —Å–µ—Ä–≤–µ—Ä–∞')
@commands.has_permissions(kick_members=True)
async def kick(ctx, member: discord.Member, *, reason=None):
    await member.kick(reason=reason)
    await ctx.send(f"{member.mention} –±—ã–ª –∏—Å–∫–ª—é—á–µ–Ω!")

@bot.command(name='ban', help='–ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
@commands.has_permissions(ban_members=True)
async def ban(ctx, member: discord.Member, *, reason=None):
    await member.ban(reason=reason)
    await ctx.send(f"{member.mention} –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω!")

@bot.command(name='unban', help='–†–∞–∑–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
@commands.has_permissions(ban_members=True)
async def unban(ctx, *, member_name):
    banned_users = await ctx.guild.bans()
    member_name, _, member_discriminator = member_name.partition("#")
    for ban_entry in banned_users:
        user = ban_entry.user
        if user.name == member_name and user.discriminator == member_discriminator:
            await ctx.guild.unban(user)
            await ctx.send(f"{user.mention} –±—ã–ª —Ä–∞–∑–±–∞–Ω–µ–Ω!")
            return
    await ctx.send(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {member_name}#{member_discriminator} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–Ω–µ.")

@bot.command(name='roll', help='–°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100')
async def roll(ctx):
    await ctx.send(f"–í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ: {random.randint(1, 100)}")

@bot.command(name='flip', help='–ü–æ–¥–±—Ä–∞—Å—ã–≤–∞–Ω–∏–µ –º–æ–Ω–µ—Ç—ã')
async def flip(ctx):
    await ctx.send(f"–í—ã–ø–∞–ª–æ: {'–û—Ä–µ–ª' if random.choice([True, False]) else '–†–µ—à–∫–∞'}")

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ API OpenWeatherMap)
WEATHER_API_KEY = '83f08b9bc6627b6c938fb155f130cf3b'

@bot.command(name='weather', help='–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–≥–æ–¥—ã –¥–ª—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞')
async def weather(ctx, *, city: str):
    url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={WEATHER_API_KEY}&units=metric&lang=ru"
    response = requests.get(url)
    if response.status_code == 200:
        data = response.json()
        embed = discord.Embed(title=f"–ü–æ–≥–æ–¥–∞ –≤ {data['name']}, {data['sys']['country']}", color=0x00AAFF)
        embed.add_field(name="–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", value=f"{data['main']['temp']}¬∞C", inline=True)
        embed.add_field(name="–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫", value=f"{data['main']['feels_like']}¬∞C", inline=True)
        embed.add_field(name="–í–ª–∞–∂–Ω–æ—Å—Ç—å", value=f"{data['main']['humidity']}%", inline=True)
        embed.add_field(name="–í–µ—Ç–µ—Ä", value=f"{data['wind']['speed']} –º/—Å", inline=True)
        embed.add_field(name="–û–ø–∏—Å–∞–Ω–∏–µ", value=data['weather'][0]['description'].capitalize(), inline=False)
        embed.set_thumbnail(url=f"http://openweathermap.org/img/wn/{data['weather'][0]['icon']}@2x.png")
        await ctx.send(embed=embed)
    else:
        embed = discord.Embed(title="–û—à–∏–±–∫–∞", description="–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≥–æ—Ä–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.", color=discord.Color.red())
        await ctx.send(embed=embed)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
@bot.event
async def on_command_error(ctx, error):
    if isinstance(error, commands.CommandNotFound):
        await ctx.send("–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ !help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.")
    elif isinstance(error, commands.MissingRequiredArgument):
        await ctx.send("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ–º–∞–Ω–¥—ã.")
    elif isinstance(error, commands.MissingPermissions):
        await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
    else:
        print(f'Unhandled error: {error}')
        await ctx.send("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

def get_audio_duration(file_path):
    extension = os.path.splitext(file_path)[1].lower()
    if extension == '.mp3':
        audio = MP3(file_path)
    elif extension == '.wav':
        audio = WAVE(file_path)
    elif extension == '.ogg':
        audio = OggVorbis(file_path)
    else:
        return 0
    return audio.info.length

def format_duration(seconds):
    minutes, seconds = divmod(int(seconds), 60)
    return f"{minutes:02d}:{seconds:02d}"

@bot.event
async def on_ready():
    print(f'–ë–æ—Ç {bot.user} –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!')
    await bot.change_presence(activity=discord.Game(name="!help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥"))

@bot.command(name='join', help='–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É')
async def join(ctx):
    if ctx.author.voice:
        channel = ctx.author.voice.channel
        await channel.connect()
        await ctx.send(f"–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∫–∞–Ω–∞–ª—É {channel}")
    else:
        await ctx.send("–í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!")

@bot.command(name='playup', help='–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π –∞—É–¥–∏–æ—Ñ–∞–π–ª')
async def play_local(ctx, *, query=None):
    if not ctx.voice_client:
        embed = discord.Embed(title="–û—à–∏–±–∫–∞", description="–ë–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!", color=discord.Color.red())
        await ctx.send(embed=embed)
        return

    if not query:
        files = os.listdir(UPLOAD_DIRECTORY)
        if not files:
            embed = discord.Embed(title="–û—à–∏–±–∫–∞", description="–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã !up", color=discord.Color.red())
            await ctx.send(embed=embed)
            return
        
        file_list = "\n".join(f"`{i+1}.` {file}" for i, file in enumerate(files))
        embed = discord.Embed(title="–î–æ—Å—Ç—É–ø–Ω—ã–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª—ã", description=file_list, color=discord.Color.blue())
        embed.set_footer(text="–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ !playup <–Ω–æ–º–µ—Ä> –∏–ª–∏ !playup <–Ω–∞–∑–≤–∞–Ω–∏–µ> –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è.")
        await ctx.send(embed=embed)
        return

    if query.isdigit():
        files = os.listdir(UPLOAD_DIRECTORY)
        index = int(query) - 1
        if 0 <= index < len(files):
            filename = files[index]
        else:
            embed = discord.Embed(title="–û—à–∏–±–∫–∞", description="–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä —Ç—Ä–µ–∫–∞.", color=discord.Color.red())
            await ctx.send(embed=embed)
            return
    else:
        filename = next((file for file in os.listdir(UPLOAD_DIRECTORY) 
                         if file.lower().startswith(query.lower())), None)
        
    if filename:
        file_path = os.path.join(UPLOAD_DIRECTORY, filename)
        
        duration = get_audio_duration(file_path)
        
        audio_source = discord.FFmpegPCMAudio(file_path)
        ctx.voice_client.play(audio_source, after=lambda e: print('–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ', e))
        
        embed = discord.Embed(title="–°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç", description=filename, color=discord.Color.green())
        embed.add_field(name="–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å", value=format_duration(duration))
        
        
        start_time = asyncio.get_event_loop().time()
        while ctx.voice_client and ctx.voice_client.is_playing():
            current_time = asyncio.get_event_loop().time() - start_time
            if current_time > duration:
                break
            progress = int((current_time / duration) * 20)
            bar = "‚ñì" * progress + "‚ñë" * (20 - progress)
            embed.set_field_at(0, name="–ü—Ä–æ–≥—Ä–µ—Å—Å", value=f"{bar} {format_duration(current_time)}/{format_duration(duration)}")
            await asyncio.sleep(5)
    else:
        embed = discord.Embed(title="–û—à–∏–±–∫–∞", description=f"–§–∞–π–ª '{query}' –Ω–µ –Ω–∞–π–¥–µ–Ω.", color=discord.Color.red())
        await ctx.send(embed=embed)

@bot.command(name='clear', help='–£–¥–∞–ª–∏—Ç—å —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π')
@commands.has_permissions(manage_messages=True)
async def clear(ctx, amount: int):
    if amount <= 0:
        embed = discord.Embed(title="–û—à–∏–±–∫–∞", description="–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.", color=discord.Color.red())
        await ctx.send(embed=embed)
        return

    deleted = await ctx.channel.purge(limit=amount + 1)
    
    embed = discord.Embed(title="–û—á–∏—Å—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π", description=f"–£–¥–∞–ª–µ–Ω–æ {len(deleted) - 1} —Å–æ–æ–±—â–µ–Ω–∏–π.", color=discord.Color.green())
    confirmation = await ctx.send(embed=embed)
    await asyncio.sleep(5)
    await confirmation.delete()

@clear.error
async def clear_error(ctx, error):
    if isinstance(error, commands.MissingRequiredArgument):
        await ctx.send("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è. –ù–∞–ø—Ä–∏–º–µ—Ä: !clear 10")
    elif isinstance(error, commands.BadArgument):
        await ctx.send("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.")
    elif isinstance(error, commands.MissingPermissions):
        await ctx.send("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
    else:
        await ctx.send(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {error}")

@bot.command(name='userinfo', help='–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ')
async def userinfo(ctx, member: discord.Member = None):
    member = member or ctx.author

    roles = [role.mention for role in member.roles[1:]]
    embed = discord.Embed(title="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ", color=member.color)
    embed.set_thumbnail(url=member.avatar.url)
    embed.add_field(name="–ò–º—è", value=member.name, inline=True)
    embed.add_field(name="–ù–∏–∫–Ω–µ–π–º", value=member.nick or "–ù–µ—Ç", inline=True)
    embed.add_field(name="ID", value=member.id, inline=True)
    embed.add_field(name="–°—Ç–∞—Ç—É—Å", value=str(member.status).title(), inline=True)
    embed.add_field(name="–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è", value=member.joined_at.strftime("%d.%m.%Y"), inline=True)
    embed.add_field(name="–ê–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞–Ω", value=member.created_at.strftime("%d.%m.%Y"), inline=True)
    embed.add_field(name=f"–†–æ–ª–∏ [{len(roles)}]", value=" ".join(roles) or "–ù–µ—Ç", inline=False)

    await ctx.send(embed=embed)

@bot.command(name='serstats', help='–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–µ—Ä–≤–µ—Ä–∞')
async def serstats(ctx):
    guild = ctx.guild
    embed = discord.Embed(title=f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ {guild.name}", color=0x00ff00)
    embed.add_field(name="–£—á–∞—Å—Ç–Ω–∏–∫–∏", value=guild.member_count, inline=True)
    embed.add_field(name="–¢–µ–∫—Å—Ç–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã", value=len(guild.text_channels), inline=True)
    embed.add_field(name="–ì–æ–ª–æ—Å–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã", value=len(guild.voice_channels), inline=True)
    embed.add_field(name="–†–æ–ª–∏", value=len(guild.roles), inline=True)
    embed.add_field(name="–í–ª–∞–¥–µ–ª–µ—Ü", value=guild.owner.mention, inline=True)
    embed.add_field(name="–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è", value=guild.created_at.strftime("%d.%m.%Y"), inline=True)
    embed.set_thumbnail(url=guild.icon.url)
    await ctx.send(embed=embed)

@bot.command(name='ctv', help='–°–æ–∑–¥–∞—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª')
async def ctv(ctx, *, channel_name: str):
    category = discord.utils.get(ctx.guild.categories, name="–í—Ä–µ–º–µ–Ω–Ω—ã–µ –≥–æ–ª–æ—Å–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã")
    if not category:
        category = await ctx.guild.create_category("–í—Ä–µ–º–µ–Ω–Ω—ã–µ –≥–æ–ª–æ—Å–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã")

    channel = await ctx.guild.create_voice_channel(channel_name, category=category)
    await ctx.send(f"–°–æ–∑–¥–∞–Ω –≤—Ä–µ–º–µ–Ω–Ω—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª: {channel.mention}")

    def check(x, y, z):
        return len(channel.members) == 0

    await bot.wait_for('voice_state_update', check=check)
    await channel.delete()
    await ctx.send(f"–í—Ä–µ–º–µ–Ω–Ω—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª '{channel_name}' –±—ã–ª —É–¥–∞–ª–µ–Ω, —Ç–∞–∫ –∫–∞–∫ –≤—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –ø–æ–∫–∏–Ω—É–ª–∏ –µ–≥–æ.")

@bot.command(name='sysinfo', help='–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ')
async def sysinfo(ctx):
    cpu_percent = psutil.cpu_percent()
    memory = psutil.virtual_memory()
    disk = psutil.disk_usage('/')
    
    embed = discord.Embed(title="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ", color=discord.Color.blue())
    
    embed.add_field(name="–°–∏—Å—Ç–µ–º–∞", value=platform.system(), inline=True)
    embed.add_field(name="–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä", value=platform.processor(), inline=True)
    embed.add_field(name="–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¶–ü", value=f"{cpu_percent}%", inline=True)
    
    embed.add_field(name="–û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å", value=f"–í—Å–µ–≥–æ: {memory.total / (1024**3):.2f} GB\n"
                                                     f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {memory.used / (1024**3):.2f} GB ({memory.percent}%)", inline=False)
    
    embed.add_field(name="–î–∏—Å–∫", value=f"–í—Å–µ–≥–æ: {disk.total / (1024**3):.2f} GB\n"
                                       f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {disk.used / (1024**3):.2f} GB ({disk.percent}%)", inline=False)
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ)
    try:
        temperatures = psutil.sensors_temperatures()
        if 'coretemp' in temperatures:
            cpu_temp = temperatures['coretemp'][0].current
            embed.add_field(name="–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¶–ü", value=f"{cpu_temp}¬∞C", inline=True)
    except:
        pass  # –ï—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ GPU (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ)
    try:
        gpus = GPUtil.getGPUs()
        if gpus:
            gpu = gpus[0]
            embed.add_field(name="GPU", value=f"{gpu.name}\n"
                                              f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: {gpu.load*100:.2f}%\n"
                                              f"–ü–∞–º—è—Ç—å: {gpu.memoryUsed}/{gpu.memoryTotal} MB", inline=False)
    except:
        pass  # –ï—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ GPU –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º

    await ctx.send(embed=embed)




TOKEN = ''

@bot.event
async def on_ready():
    print(f'–ë–æ—Ç {bot.user} –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!')
    await bot.change_presence(activity=discord.Game(name="!help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥"))

if __name__ == '__main__':
    bot.run(TOKEN)